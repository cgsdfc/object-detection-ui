Apt source:

https://www.cnblogs.com/dream4567/p/7382029.html

# deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricted
deb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties
deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted
deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-properties
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-properties
deb http://mirrors.aliyun.com/ubuntu/ xenial universe
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe
deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse
deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-properties
deb http://archive.canonical.com/ubuntu xenial partner
deb-src http://archive.canonical.com/ubuntu xenial partner
deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties
deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe
deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse

$ sudo su -     # 切换到 root 目录
 
# cd /etc/apt/
# cp sources.list  sources.list.bak
# true> sources.list
# vi  /etc/apt/sources.list    # 将上面的源复制到文件中, 保存退出
# apt update && apt upgrade -y   # 更新本地 apt 源 

git vim tree

change default browser to chromium:

(python27) liao@liao:~$ sudo update-alternatives --config x-www-browser
There are 2 choices for the alternative x-www-browser (providing /usr/bin/x-www-browser).

  Selection    Path                       Priority   Status
------------------------------------------------------------
* 0            /usr/bin/firefox            40        auto mode
  1            /usr/bin/chromium-browser   40        manual mode
  2            /usr/bin/firefox            40        manual mode

Press <enter> to keep the current choice[*], or type selection number: 1
update-alternatives: using /usr/bin/chromium-browser to provide /usr/bin/x-www-browser (x-www-browser) in manual mode
(python27) liao@liao:~$ 


setup conda python 2.7 env using pycharm's project creator, very easy no command line involved.



安装搜狗输入法：

【系统设置】【语言支持】
1. 安装未安装的语言支持包
2. 把ibus换成fcite
3. 终端：
sudo dpkg --auto-deconfigure -i ./sogoupinyin_4.0.1.212364.deb
会卸载 fcitx-ui-qimpanel


安装PyQt-5到base环境：

pip install PyQt5 pyqt5-tools

sudo apt-get install libxcb-xinerama0
./designer 

安装 pyuic5，把UI编译为py文件：

sudo apt-get install pyqt5-dev-tools 
pyuic5

用国内源加速：

pip install PyQt5 pyqt5-tools -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com


Pycharm 配置 Qt 外部工具

就是external tools把designer和PyUIC加上去。

https://zhuanlan.zhihu.com/p/32259868

pycharm 插件改配色：Monokai VSCode High Contrast


配置 Python27 环境，主要是torch（低版本）

git 配置：
服务器的git版本较旧，才需要这个配置

 git config --global push.default simple


安装NVIDIA 驱动

按照这两篇之一去做就能成功。

https://blog.csdn.net/lihe4151021/article/details/90083431

(base) liao@liao:~$  lspci |grep VGA
01:00.0 VGA compatible controller: NVIDIA Corporation GP104 [GeForce GTX 1070 Ti] (rev a1)

https://blog.csdn.net/qq_34525916/article/details/110953980

https://cn.download.nvidia.com/XFree86/Linux-x86_64/510.73.05/NVIDIA-Linux-x86_64-510.73.05.run


安装torch 

conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes


想安装cudatoolkit=9.0，但是报错：
conda install pytorch=0.3.1 torchvision cudatoolkit=9.0 -c pytorch
Collecting package metadata (current_repodata.json): done
Solving environment: failed with initial frozen solve. Retrying with flexible solve.
Collecting package metadata (repodata.json): done
Solving environment: failed with initial frozen solve. Retrying with flexible solve.
Solving environment: \ 
Found conflicts! Looking for incompatible packages.                                                                                                     failed                                                                                                                                                      

UnsatisfiableError: The following specifications were found
to be incompatible with the existing python installation in your environment:

Specifications:

  - torchvision -> python[version='2.6.*|3.3.*|3.4.*|>=3.6']

Your python: python=2.7

If python is on the left-most side of the chain, that's the version you've asked for.
When python appears to the right, that indicates that the thing on the left is somehow
not available for the python version you are constrained to. Note that conda will not
change your python version to a different minor version unless you explicitly specify
that.

The following specifications were found to be incompatible with each other:

Output in format: Requested package -> Available versions

Package cudatoolkit conflicts for:
torchvision -> pytorch==1.4.0 -> cudatoolkit[version='10.0.*|>=10.1.243,<10.2.0a0|9.2.*|>=8.0,<8.1|>=8.0,<8.1.0a0|8.*|9.*|9.0.*|8.0.*|7.5.*']
pytorch=0.3.1 -> cudatoolkit=8.0
pytorch=0.3.1 -> cudnn[version='>=7.0.5,<=8.0a0'] -> cudatoolkit[version='10.0.*|9.0.*|>=10.0,<10.1|>=10.1,<10.2|>=9.0,<9.1|>=9.2,<9.3|>=10.2,<10.3|9.2.*|7.5.*|7.5|>=9.2,<9.3.0a0|>=10.0.130,<10.1.0a0']
torchvision -> cudatoolkit[version='>=10.0,<10.1|>=10.1,<10.2|>=10.2,<10.3|>=11.3,<11.4|>=11.5,<11.6|>=11.1,<11.2|>=11.0,<11.1|>=9.2,<9.3|>=9.0,<9.1|>=10.0.130,<10.1.0a0|>=9.2,<9.3.0a0|>=9.0,<9.1.0a0']The following specifications were found to be incompatible with your system:

  - feature:/linux-64::__glibc==2.23=0
  - feature:|@/linux-64::__glibc==2.23=0
  - python=2.7 -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']
  - pytorch=0.3.1 -> libgcc-ng[version='>=5.4.0'] -> __glibc[version='>=2.17']
  - torchvision -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']

Your installed version is: 2.23

于是改为安装cuda=9.0

conda install pytorch=0.3.1 torchvision cuda90 -c pytorch


NVIDIA-SMI 510.73.05    Driver Version: 510.73.05    CUDA Version: 11.6

CUDA 的下载页面：

https://developer.nvidia.com/cuda-toolkit-archive

NVIDIA-SMI 显示的版本是11.6

安装的版本是 CUDA 11.0
https://developer.nvidia.com/cuda-11.0-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=runfilelocal

wget http://developer.download.nvidia.com/compute/cuda/11.0.2/local_installers/cuda_11.0.2_450.51.05_linux.run
sudo sh cuda_11.0.2_450.51.05_linux.run

===========
= Summary =
===========

Driver:   Not Selected
Toolkit:  Installed in /usr/local/cuda-11.0/
Samples:  Installed in /home/liao/, but missing recommended libraries

Please make sure that
 -   PATH includes /usr/local/cuda-11.0/bin
 -   LD_LIBRARY_PATH includes /usr/local/cuda-11.0/lib64, or, add /usr/local/cuda-11.0/lib64 to /etc/ld.so.conf and run ldconfig as root

To uninstall the CUDA Toolkit, run cuda-uninstaller in /usr/local/cuda-11.0/bin

Please see CUDA_Installation_Guide_Linux.pdf in /usr/local/cuda-11.0/doc/pdf for detailed information on setting up CUDA.
***WARNING: Incomplete installation! This installation did not install the CUDA Driver. A driver of version at least .00 is required for CUDA 11.0 functionality to work.
To install the driver using this installer, run the following command, replacing <CudaInstaller> with the name of this run file:
    sudo <CudaInstaller>.run --silent --driver



安装录屏软件

sudo apt-get install kazam

kazam 即可录屏，非常方便。

gitee 免密push：

1. 到gitee 设定处，ssh公钥；
2. ssh-keygen -t rsa 生成公钥
3. 把公钥粘贴到gitee处，保存。
4. 到你的项目clone处，选ssh，复制地址
5. 到你的本地仓库，git remote remove origin; git remote add origin <ssh-addr>
6. git push -u origin master


conda Aliyun 源

conda config --add channels https://mirrors.aliyun.com/anaconda/pkgs/free
conda config --add channels https://mirrors.aliyun.com/anaconda/pkgs/main
conda config --add channels https://mirrors.aliyun.com/anaconda/pkgs/msys2
conda config --add channels https://mirrors.aliyun.com/anaconda/pkgs/r

conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/Paddle
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/auto
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/biobakery
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/bioconda
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/c4aarch64
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/caffe2
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/conda-forge
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/deepmodeling
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/dglteam
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/fastai
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/fermi
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/idaholab
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/intel
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/matsci
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/menpo
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/mordred-descriptor
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/msys2
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/numba
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/ohmeta
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/omnia
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/plotly
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/psi4
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/pytorch
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/pytorch-test
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/pytorch3d
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/pyviz
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/qiime2
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/rapidsai
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/rdkit
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/simpleitk
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/stackless
conda config --add channels https://mirrors.aliyun.com/anaconda/cloud/ursky

conda config --set show_channel_urls yes


不需要所有的channels

conda config --add channels https://mirrors.aliyun.com/anaconda/pkgs/free
conda config --add channels https://mirrors.aliyun.com/anaconda/pkgs/main
conda config --set show_channel_urls yes

cv2 和 PyQt 不兼容：

当前 cv2 版本：
Name: opencv-python
Version: 4.5.5.64
Summary: Wrapper package for OpenCV python bindings.
Home-page: https://github.com/skvark/opencv-python
Author: 
Author-email: 
License: MIT
Location: /home/liao/anaconda3/lib/python3.9/site-packages
Requires: numpy, numpy, numpy
Required-by: 

https://blog.csdn.net/weixin_43480227/article/details/114984814?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-114984814-blog-106587168.pc_relevant_paycolumn_v3&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-114984814-blog-106587168.pc_relevant_paycolumn_v3&utm_relevant_index=1

 pip install opencv-python==4.1.0.25


解决不了，cv还是和QT冲突，考虑用plt代替cv2


https://blog.csdn.net/weixin_42990464/article/details/104974486

https://blog.csdn.net/lly1122334/article/details/90647962


Pretrain 报错：


Traceback (most recent call last):
File "train.py", line 219, in <module>
train(epoch)
File "train.py", line 182, in train
loss = region_loss(output, target)
File "/home/liao/.conda/envs/python27/lib/python2.7/site-packages/torch/nn/modules/module.py", line 357, in __call__
result = self.forward(*input, **kwargs)
File "/home/liao/codes/FSODM/region_loss.py", line 352, in forward
self.thresh)
File "/home/liao/codes/FSODM/region_loss.py", line 79, in build_targets
gx = (tboxes[:, 1] * feature_size[1]).float()
IndexError: trying to index 2 dimensions of a 0 dimensional tensor


conf 4.196590, cls 1.990685, total 6.541667
target.shape torch.Size([8, 250]) tboxes.shape torch.Size([12, 5])
target.shape torch.Size([8, 250]) tboxes.shape torch.Size([12, 5])
target.shape torch.Size([8, 250]) tboxes.shape torch.Size([12, 5])
264: nGT 12, precision 0.000000, recall50 0.000000, recall75 0.000000, cls_acc 0.277778, loss: x 0.117158, y 0.115313, w 0.569772, h 0.222318, conf 4.769205, cls 1.953997, total 7.747763
target.shape torch.Size([5, 250]) tboxes.shape torch.Size([50, 5])
target.shape torch.Size([5, 250]) tboxes.shape torch.Size([50, 5])
target.shape torch.Size([5, 250]) tboxes.shape torch.Size([50, 5])
267: nGT 50, precision 0.000000, recall50 0.000000, recall75 0.000000, cls_acc 0.693878, loss: x 0.098776, y 0.084322, w 0.303712, h 0.204809, conf 4.427854, cls 1.827731, total 6.947203
target.shape torch.Size([1, 250]) tboxes.shape torch.Size([])
0%|          | 0/500 [00:41<?, ?it/s]
Traceback (most recent call last):
File "train.py", line 219, in <module>
train(epoch)
File "train.py", line 182, in train
loss = region_loss(output, target)
File "/home/liao/.conda/envs/python27/lib/python2.7/site-packages/torch/nn/modules/module.py", line 357, in __call__
result = self.forward(*input, **kwargs)
File "/home/liao/codes/FSODM/region_loss.py", line 355, in forward
self.thresh)


师兄来8楼看了只后，说是pos、neg图像的问题。所谓的neg图像，就是图像中完全没有目标，所以这类图像不对应
任何标签，target就会出问题。解决办法是重新生成数据集，在某一步用师兄的脚本替代原来的脚本。
数据集中，只有ground truth、pos、neg三个文件夹是原始数据，其他都是脚本生成的，所以备份之后删掉这些生成文件夹即可。
经过师兄拷贝新的数据集并且更新预处理流程后，问题修复。









